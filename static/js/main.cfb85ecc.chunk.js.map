{"version":3,"sources":["components/NewExpense/ExpenseForm.module.css","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","App.js","index.js"],"names":["module","exports","ExpenseForm","props","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","isValid","setIsValid","onSubmit","event","preventDefault","trim","length","expenseData","title","amount","date","Date","onSaveExpenseData","className","styles","invalid","type","value","onChange","target","min","step","max","onClick","onCancel","NewExpense","setIsEditing","enteredExpenseData","id","Math","random","toString","onAddExpense","Card","classes","children","ExpensesFilter","selected","onChangeFilter","ExpenseDate","month","toLocaleString","day","year","getFullYear","ExpenseItem","ExpensesList","items","map","expense","ChartBar","barFillHeight","maxValue","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","selectedYear","DUMMAY_DATA","App","setExpenses","prevExpenses","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.cfb85ecc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"new-expense__controls\":\"ExpenseForm_new-expense__controls__2_HzR\",\"new-expense__control\":\"ExpenseForm_new-expense__control__3StYr\",\"new-expense__actions\":\"ExpenseForm_new-expense__actions__YKeZ9\",\"invalid\":\"ExpenseForm_invalid___v3nI\"};","import React, { useState } from \"react\";\r\n\r\nimport styles from \"./ExpenseForm.module.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n  const [isValid, setIsValid] = useState(true);\r\n  // const [userInput,setUserInput]=useState({\r\n  //   enteredTitle:'',\r\n  //   enteredAmount:'',\r\n  //   enteredDate:''\r\n  // });\r\n\r\n  const titleChangeHandler = (event) => {\r\n    if (event.target.value.trim().length > 0) {\r\n      setIsValid(true);\r\n    }\r\n    setEnteredTitle(event.target.value);\r\n    // setUserInput((prevState)=>{\r\n    //   return {...prevState, setUserInput: event.target.value};\r\n    // });\r\n  };\r\n\r\n  const amountChangeHandler = (event) => {\r\n    if (event.target.value.trim().length > 0) {\r\n      setIsValid(true);\r\n    }\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n  const dateChangeHandler = (event) => {\r\n    if (event.target.value > 0) {\r\n      isValid(true);\r\n    }\r\n    setEnteredDate(event.target.value);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    if (\r\n      enteredTitle.trim().length === 0 ||\r\n      enteredAmount.trim().length === 0 ||\r\n      enteredDate.trim().length === 0\r\n    ) {\r\n      setIsValid(false);\r\n      return;\r\n    }\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n    props.onSaveExpenseData(expenseData);\r\n    setEnteredTitle(\"\");\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className={`${styles[\"new-expense__controls\"]}`}>\r\n        <div\r\n          className={`${styles[\"new-expense__control\"]} ${\r\n            !isValid ? styles.invalid : \"\"\r\n          }`}\r\n        >\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div\r\n          className={`${styles[\"new-expense__control\"]} ${\r\n            !isValid && styles.invalid\r\n          }`}\r\n        >\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            value={enteredAmount}\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div\r\n          className={`${styles[\"new-expense__control\"]} ${\r\n            !isValid && styles.invalid\r\n          }`}\r\n        >\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            value={enteredDate}\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className={`${styles[\"new-expense__actions\"]}`}>\r\n        <button type=\"button\" onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import React, { useState } from \"react\";\r\n\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport \"./NewExpense.css\";\r\n\r\nconst NewExpense = (props) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onAddExpense(expenseData);\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const stopEditingHandler = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      <ExpenseForm\r\n        onSaveExpenseData={saveExpenseDataHandler}\r\n        onCancel={stopEditingHandler}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\nconst Card = (props) => {\r\n  const classes = 'card ' + props.className;\r\n\r\n  return <div className={classes}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\n\r\nimport \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const dropdownChangeHandler = (event) => {\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropdownChangeHandler}>\r\n          <option value=\"2023\">2023</option>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import React from 'react';\r\n\r\nimport './ExpenseDate.css';\r\n\r\nconst ExpenseDate = (props) => {\r\n  const month = props.date.toLocaleString('en-US', { month: 'long' });\r\n  const day = props.date.toLocaleString('en-US', { day: '2-digit' });\r\n  const year = props.date.getFullYear();\r\n\r\n  return (\r\n    <div className='expense-date'>\r\n      <div className='expense-date__month'>{month}</div>\r\n      <div className='expense-date__year'>{year}</div>\r\n      <div className='expense-date__day'>{day}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseDate;\r\n","import React from \"react\";\r\n\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./ExpenseItem.css\";\r\n\r\nconst ExpenseItem = (props) => {\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={props.date} />\r\n        <div className=\"expense-item__description\">\r\n          <h2>{props.title}</h2>\r\n          <div className=\"expense-item__price\">${props.amount}</div>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import React from \"react\";\r\nimport \"./ExpensesList.css\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\n\r\nconst ExpensesList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">No Expenses found.</h2>;\r\n  }\r\n\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.items.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;\r\n","import React from \"react\";\r\nimport \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = \"0%\";\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import React from \"react\";\r\nimport \"./Chart.css\";\r\nimport ChartBar from \"./ChartBar\";\r\n\r\nconst Chart = (props) => {\r\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointValues);\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from \"react\";\r\n\r\nimport Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth(); // starting at 0 => January => 0\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import React, { useState } from \"react\";\r\n\r\nimport Card from \"../UI/Card\";\r\nimport \"./Expenses.css\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\n\r\nconst Expenses = (props) => {\r\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  const filteredExpenses = props.items.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter\r\n          selected={filteredYear}\r\n          onChangeFilter={filterChangeHandler}\r\n        />\r\n        <ExpensesChart expenses={filteredExpenses} />\r\n        <ExpensesList items={filteredExpenses} />\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","import React, { useState } from \"react\";\r\nimport NewExpense from \"./components/NewExpense/NewExpense\";\r\nimport Expenses from \"./components/Expenses/Expenses\";\r\n\r\nconst DUMMAY_DATA = [\r\n  {\r\n    id: \"e1\",\r\n    title: \"Grocery\",\r\n    amount: 14.12,\r\n    date: new Date(2020, 7, 14),\r\n  },\r\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\r\n  {\r\n    id: \"e3\",\r\n    title: \"Car Insurance\",\r\n    amount: 294.67,\r\n    date: new Date(2020, 2, 28),\r\n  },\r\n  {\r\n    id: \"e4\",\r\n    title: \"New Desk (Wooden)\",\r\n    amount: 450,\r\n    date: new Date(2023, 5, 12),\r\n  },\r\n];\r\n\r\nconst App = () => {\r\n  const [expenses, setExpenses] = useState(DUMMAY_DATA);\r\n\r\n  const addExpenseHandler = (expense) => {\r\n    setExpenses((prevExpenses) => {\r\n      return [expense, ...prevExpenses];\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NewExpense onAddExpense={addExpenseHandler} />\r\n      <Expenses items={expenses} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(<App />);\r\n"],"sourceRoot":""}